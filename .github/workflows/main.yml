name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch: # Allows manual triggering from the GitHub UI

jobs:
  docker_compose_and_test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Install Docker Compose i
      - name: Install Docker Compose
        run: |
          DOCKER_COMPOSE_VERSION=$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep tag_name | cut -d\" -f4)
          sudo curl -L "https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      # Step 3: Use GitHub Secrets to set environment variables
      - name: Set up environment variables
        run: |
          echo "PORT=${{ secrets.PORT }}" >> ByteWars/server/.env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> ByteWars/server/.env
          echo "DB_PATH=${{ secrets.DB_PATH }}" >> ByteWars/server/.env

      # Step 4: Build and start Docker Compose services
      - name: Build and start Docker Compose services
        run: |
          cd ByteWars
          docker-compose up -d

      # Step 5: Install server dependencies
      - name: Install server dependencies
        run: |
          cd ByteWars/server
          npm install

      # Step 6: Run server lint
      - name: Run server lint
        run: |
          cd ByteWars/server
          npx eslint .

      # Step 7: Install client dependencies
      - name: Install client dependencies
        run: |
          cd ByteWars/client
          npm install

      # # Step 8: Run client lint
      # - name: Run client lint
      #   run: |
      #     cd ByteWars/client
      #     npx eslint .

      # Step 9: Run server tests
      - name: Run server tests
        run: |
          cd ByteWars/server
          npm test -- --coverage

      # # Step 10: Run client tests
      # - name: Run client tests
      #   run: |
      #     cd ByteWars/client
      #     npm test -- --coverage

      # Step 11: Clean up Docker Compose
      - name: Shut down Docker Compose
        run: |
          cd ByteWars
          docker-compose down
