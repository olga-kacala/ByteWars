name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch: # Allows manual triggering from the GitHub UI

jobs:
  docker_compose_and_test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Install Docker Compose
      - name: Install Docker Compose
        run: |
          # Get the latest version of Docker Compose
          DOCKER_COMPOSE_VERSION=$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep tag_name | cut -d\" -f4)

          # Download and install Docker Compose
          sudo curl -L "https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      # Step 3: Build and start Docker Compose services
      - name: Build and start Docker Compose services
        run: |
          cd ByteWars
          docker-compose up -d

      # Step 4: Run linting for server
      - name: Run server lint
        run: |
          cd ByteWars/server
          docker-compose exec -T server npm run lint

      # Step 5: Run linting for client
      - name: Run client lint
        run: |
          cd ByteWars/client
          docker-compose exec -T client npm run lint

      # Step 6: Run tests for server
      - name: Run server tests
        run: |
          cd ByteWars/server
          docker-compose exec -T server npm test -- --coverage

      # Step 7: Run tests for client
      - name: Run client tests
        run: |
          cd ByteWars/client
          docker-compose exec -T client npm test -- --coverage

      # Step 8: Clean up Docker Compose
      - name: Shut down Docker Compose
        run: |
          cd ByteWars
          docker-compose down
